package com.nari.opfive.domain;
// Generated 2017-8-23 16:22:41 by Hibernate Tools 5.2.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Task generated by hbm2java
 */
@Entity
@Table(name = "task", catalog = "leanassessment")
public class Task implements java.io.Serializable {

	private int tid;
	private Equipment equipment;
	private Date taskTime;
	private Set taskoperators = new HashSet(0);
	private Set rootasseitems = new HashSet(0);

	public Task() {
	}

	public Task(int tid, Equipment equipment, Date taskTime) {
		this.tid = tid;
		this.equipment = equipment;
		this.taskTime = taskTime;
	}

	public Task(int tid, Equipment equipment, Date taskTime, Set taskoperators, Set rootasseitems) {
		this.tid = tid;
		this.equipment = equipment;
		this.taskTime = taskTime;
		this.taskoperators = taskoperators;
		this.rootasseitems = rootasseitems;
	}

	@Id

	@Column(name = "TID", unique = true, nullable = false)
	public int getTid() {
		return this.tid;
	}

	public void setTid(int tid) {
		this.tid = tid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EID", nullable = false)
	public Equipment getEquipment() {
		return this.equipment;
	}

	public void setEquipment(Equipment equipment) {
		this.equipment = equipment;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TaskTime", nullable = false, length = 19)
	public Date getTaskTime() {
		return this.taskTime;
	}

	public void setTaskTime(Date taskTime) {
		this.taskTime = taskTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "task")
	public Set getTaskoperators() {
		return this.taskoperators;
	}

	public void setTaskoperators(Set taskoperators) {
		this.taskoperators = taskoperators;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "task")
	public Set getRootasseitems() {
		return this.rootasseitems;
	}

	public void setRootasseitems(Set rootasseitems) {
		this.rootasseitems = rootasseitems;
	}

}
